<nav class="navbar navbar-inverse">
    <div class="container-fluid">
        <div class="navbar-header">
            <a class="navbar-brand" href="#">Energy Logan</a>
        </div>
        <ul class="nav navbar-nav navbar-right">
            <li class="tag"><a href="#"><span class="glyphicon glyphicon-home"></span> Home</a></li>
            <li class="tag"><a href="#"><span class="glyphicon glyphicon-user"></span> Account</a></li>
            <li class="tag dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="#">View<span class="caret"></span></a>
                <ul class="dropdown-menu">
                    <li><a href="#">Recent</a></li>
                    <li><a href="#">Progress</a></li>
                    <li><a href="#">Project ID</a></li>
                </ul>
            </li>
            <button class="btn navbar-btn" id="newproject">Add Project</button>
        </ul>
    </div>
</nav>
<div class="container">
    <h3>Projects Dashboard</h3>
    <p>Completion Progress</p>


    <div class="row">
     <div class="col-md-12 projects-container">
      </div>

<!-- 
        <div class="col-md-3">
            <canvas class="doughnutChart"></canvas>

        </div> -->

    </div>
</div>
<script src="js/dashboard.js" type="text/javascript"></script>
<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.bundle.min.js"></script>
<script src="js/dashboard.js" type="text/javascript"></script> -->
<!-- <script type="text/javascript">

var mychart = $(".doughnutChart").get(0).getContext("2d");
var doughnut = new Chart(mychart, {
    type: "doughnut",
    data: {
        labels: ["complete", "uncomplete"],
        datasets: [{
            data: [0, 100],
            backgroundColor: ["#f1c40f", "#eee"]
        }]
    },
    options: {
        cutoutPercentage: 60,
        legend: {
            display: false
        },
        title: {
            display: true,
            text: "",
            position: "bottom"
        },
        animation: {
            animateScale: true,
            onComplete: showPercentage
        }
    }
});

var denominator = 0;
var numerator = 0;

doughnut.data.datasets[0].data[0] = numerator/denominator;
doughnut.data.datasets[0].data[1] = (denominator - numerator)/denominator;
doughnut.options.title.text = "Project 1";
doughnut.update();
var floorString = "";
var currentURL = window.location.origin;

// calculate denominator by drawing data from the projects table
    $.get(currentURL + "/api/projects", function(projectsData) {
        floorString = projectsData[0].floors;
        console.log("This is the floorString: " +floorString);
        var allFloors = floorString.split(",");
        for (var i = 0; i < allFloors.length; i++) {
            allFloors[i] = allFloors[i].trim();
        }
        console.log("allFloors: " + allFloors);
        denominator = allFloors.length;
        console.log("denominator: " + denominator);
    });

// calculate numerator by drawing data from the surveys table
    $.get(currentURL + "/api/surveys", function(surveysData) {
      var allFloors2 = [];

for (var i = 0; i < surveysData.length; i++) {
  if (surveysData[i]["ProjectProjectId"] === 1) {
      allFloors2.push(surveysData[i]["floor_number"]);
      console.log("allFloors2: " + allFloors2);
      var uniqueFloor = allFloors2.filter(function(itm, i, allFloors2){
        return i == allFloors2.indexOf(itm);
      });
      console.log("uniqueFloor: " + uniqueFloor);
  }
}
 numerator = uniqueFloor.length;
console.log("numerator: " + numerator);
    });

     $("#newproject").on("click", function(){
     window.location.href = "/newprojectform";
     });

function showPercentage() {
    var canvas = $(".doughnutChart");
    var context = canvas.get(0).getContext("2d");
    //console.log(canvas);
    //console.log(context);

    var cx = canvas.width / 2;
    var cy = canvas.height / 2;

    context.textAlign = 'center';
    context.textBaseline = 'middle';
    context.font = "14px calibri";
    context.fillStyle = 'black';
    context.fillText(doughnut.data.datasets[0].data[0] + "%", cx, cy);
};

</script> -->



